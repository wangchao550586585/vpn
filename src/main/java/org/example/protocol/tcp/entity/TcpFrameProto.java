// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TcpFrame.proto

package org.example.protocol.tcp.entity;

public final class TcpFrameProto {
  private TcpFrameProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TcpFrameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:jet.protobuf.TcpFrame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *指定字段类型
     * </pre>
     *
     * <code>optional int32 SourcePort = 1;</code>
     * @return Whether the sourcePort field is set.
     */
    boolean hasSourcePort();
    /**
     * <pre>
     *指定字段类型
     * </pre>
     *
     * <code>optional int32 SourcePort = 1;</code>
     * @return The sourcePort.
     */
    int getSourcePort();

    /**
     * <code>optional int32 DestinationPort = 2;</code>
     * @return Whether the destinationPort field is set.
     */
    boolean hasDestinationPort();
    /**
     * <code>optional int32 DestinationPort = 2;</code>
     * @return The destinationPort.
     */
    int getDestinationPort();

    /**
     * <code>optional int32 SequenceNumber = 3;</code>
     * @return Whether the sequenceNumber field is set.
     */
    boolean hasSequenceNumber();
    /**
     * <code>optional int32 SequenceNumber = 3;</code>
     * @return The sequenceNumber.
     */
    int getSequenceNumber();

    /**
     * <code>optional int32 AcknowledgmentNumber = 4;</code>
     * @return Whether the acknowledgmentNumber field is set.
     */
    boolean hasAcknowledgmentNumber();
    /**
     * <code>optional int32 AcknowledgmentNumber = 4;</code>
     * @return The acknowledgmentNumber.
     */
    int getAcknowledgmentNumber();

    /**
     * <code>optional int32 dataOffset = 5;</code>
     * @return Whether the dataOffset field is set.
     */
    boolean hasDataOffset();
    /**
     * <code>optional int32 dataOffset = 5;</code>
     * @return The dataOffset.
     */
    int getDataOffset();

    /**
     * <code>optional int32 Reserved = 6;</code>
     * @return Whether the reserved field is set.
     */
    boolean hasReserved();
    /**
     * <code>optional int32 Reserved = 6;</code>
     * @return The reserved.
     */
    int getReserved();

    /**
     * <code>optional int32 URG = 7;</code>
     * @return Whether the uRG field is set.
     */
    boolean hasURG();
    /**
     * <code>optional int32 URG = 7;</code>
     * @return The uRG.
     */
    int getURG();

    /**
     * <code>optional int32 ACK = 8;</code>
     * @return Whether the aCK field is set.
     */
    boolean hasACK();
    /**
     * <code>optional int32 ACK = 8;</code>
     * @return The aCK.
     */
    int getACK();

    /**
     * <code>optional int32 PSH = 9;</code>
     * @return Whether the pSH field is set.
     */
    boolean hasPSH();
    /**
     * <code>optional int32 PSH = 9;</code>
     * @return The pSH.
     */
    int getPSH();

    /**
     * <code>optional int32 RST = 10;</code>
     * @return Whether the rST field is set.
     */
    boolean hasRST();
    /**
     * <code>optional int32 RST = 10;</code>
     * @return The rST.
     */
    int getRST();

    /**
     * <code>optional int32 SYN = 11;</code>
     * @return Whether the sYN field is set.
     */
    boolean hasSYN();
    /**
     * <code>optional int32 SYN = 11;</code>
     * @return The sYN.
     */
    int getSYN();

    /**
     * <code>optional int32 FIN = 12;</code>
     * @return Whether the fIN field is set.
     */
    boolean hasFIN();
    /**
     * <code>optional int32 FIN = 12;</code>
     * @return The fIN.
     */
    int getFIN();

    /**
     * <code>optional int32 Window = 13;</code>
     * @return Whether the window field is set.
     */
    boolean hasWindow();
    /**
     * <code>optional int32 Window = 13;</code>
     * @return The window.
     */
    int getWindow();

    /**
     * <code>optional int32 Checksum = 14;</code>
     * @return Whether the checksum field is set.
     */
    boolean hasChecksum();
    /**
     * <code>optional int32 Checksum = 14;</code>
     * @return The checksum.
     */
    int getChecksum();

    /**
     * <code>optional int32 UrgentPointer = 15;</code>
     * @return Whether the urgentPointer field is set.
     */
    boolean hasUrgentPointer();
    /**
     * <code>optional int32 UrgentPointer = 15;</code>
     * @return The urgentPointer.
     */
    int getUrgentPointer();

    /**
     * <code>optional int32 Options = 16;</code>
     * @return Whether the options field is set.
     */
    boolean hasOptions();
    /**
     * <code>optional int32 Options = 16;</code>
     * @return The options.
     */
    int getOptions();

    /**
     * <code>optional int32 Padding = 17;</code>
     * @return Whether the padding field is set.
     */
    boolean hasPadding();
    /**
     * <code>optional int32 Padding = 17;</code>
     * @return The padding.
     */
    int getPadding();

    /**
     * <code>repeated bytes data = 18;</code>
     * @return A list containing the data.
     */
    java.util.List<com.google.protobuf.ByteString> getDataList();
    /**
     * <code>repeated bytes data = 18;</code>
     * @return The count of data.
     */
    int getDataCount();
    /**
     * <code>repeated bytes data = 18;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    com.google.protobuf.ByteString getData(int index);
  }
  /**
   * <pre>
   **
   *     0                   1                   2                   3
   *     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   *    |          Source Port          |       Destination Port        |
   *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   *    |                        Sequence Number                        |
   *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   *    |                    Acknowledgment Number                      |
   *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   *    |  Data |           |U|A|P|R|S|F|                               |
   *    | Offset| Reserved  |R|C|S|S|Y|I|            Window             |
   *    |       |           |G|K|H|T|N|N|                               |
   *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   *    |           Checksum            |         Urgent Pointer        |
   *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   *    |                    Options                    |    Padding    |
   *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   *    |                             data                              |
   *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   *
   *                             TCP Header Format
   * </pre>
   *
   * Protobuf type {@code jet.protobuf.TcpFrame}
   */
  public static final class TcpFrame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:jet.protobuf.TcpFrame)
      TcpFrameOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TcpFrame.newBuilder() to construct.
    private TcpFrame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TcpFrame() {
      data_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TcpFrame();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TcpFrameProto.internal_static_jet_protobuf_TcpFrame_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TcpFrameProto.internal_static_jet_protobuf_TcpFrame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TcpFrame.class, Builder.class);
    }

    private int bitField0_;
    public static final int SOURCEPORT_FIELD_NUMBER = 1;
    private int sourcePort_ = 0;
    /**
     * <pre>
     *指定字段类型
     * </pre>
     *
     * <code>optional int32 SourcePort = 1;</code>
     * @return Whether the sourcePort field is set.
     */
    @Override
    public boolean hasSourcePort() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *指定字段类型
     * </pre>
     *
     * <code>optional int32 SourcePort = 1;</code>
     * @return The sourcePort.
     */
    @Override
    public int getSourcePort() {
      return sourcePort_;
    }

    public static final int DESTINATIONPORT_FIELD_NUMBER = 2;
    private int destinationPort_ = 0;
    /**
     * <code>optional int32 DestinationPort = 2;</code>
     * @return Whether the destinationPort field is set.
     */
    @Override
    public boolean hasDestinationPort() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 DestinationPort = 2;</code>
     * @return The destinationPort.
     */
    @Override
    public int getDestinationPort() {
      return destinationPort_;
    }

    public static final int SEQUENCENUMBER_FIELD_NUMBER = 3;
    private int sequenceNumber_ = 0;
    /**
     * <code>optional int32 SequenceNumber = 3;</code>
     * @return Whether the sequenceNumber field is set.
     */
    @Override
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 SequenceNumber = 3;</code>
     * @return The sequenceNumber.
     */
    @Override
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int ACKNOWLEDGMENTNUMBER_FIELD_NUMBER = 4;
    private int acknowledgmentNumber_ = 0;
    /**
     * <code>optional int32 AcknowledgmentNumber = 4;</code>
     * @return Whether the acknowledgmentNumber field is set.
     */
    @Override
    public boolean hasAcknowledgmentNumber() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 AcknowledgmentNumber = 4;</code>
     * @return The acknowledgmentNumber.
     */
    @Override
    public int getAcknowledgmentNumber() {
      return acknowledgmentNumber_;
    }

    public static final int DATAOFFSET_FIELD_NUMBER = 5;
    private int dataOffset_ = 0;
    /**
     * <code>optional int32 dataOffset = 5;</code>
     * @return Whether the dataOffset field is set.
     */
    @Override
    public boolean hasDataOffset() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 dataOffset = 5;</code>
     * @return The dataOffset.
     */
    @Override
    public int getDataOffset() {
      return dataOffset_;
    }

    public static final int RESERVED_FIELD_NUMBER = 6;
    private int reserved_ = 0;
    /**
     * <code>optional int32 Reserved = 6;</code>
     * @return Whether the reserved field is set.
     */
    @Override
    public boolean hasReserved() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int32 Reserved = 6;</code>
     * @return The reserved.
     */
    @Override
    public int getReserved() {
      return reserved_;
    }

    public static final int URG_FIELD_NUMBER = 7;
    private int uRG_ = 0;
    /**
     * <code>optional int32 URG = 7;</code>
     * @return Whether the uRG field is set.
     */
    @Override
    public boolean hasURG() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional int32 URG = 7;</code>
     * @return The uRG.
     */
    @Override
    public int getURG() {
      return uRG_;
    }

    public static final int ACK_FIELD_NUMBER = 8;
    private int aCK_ = 0;
    /**
     * <code>optional int32 ACK = 8;</code>
     * @return Whether the aCK field is set.
     */
    @Override
    public boolean hasACK() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional int32 ACK = 8;</code>
     * @return The aCK.
     */
    @Override
    public int getACK() {
      return aCK_;
    }

    public static final int PSH_FIELD_NUMBER = 9;
    private int pSH_ = 0;
    /**
     * <code>optional int32 PSH = 9;</code>
     * @return Whether the pSH field is set.
     */
    @Override
    public boolean hasPSH() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional int32 PSH = 9;</code>
     * @return The pSH.
     */
    @Override
    public int getPSH() {
      return pSH_;
    }

    public static final int RST_FIELD_NUMBER = 10;
    private int rST_ = 0;
    /**
     * <code>optional int32 RST = 10;</code>
     * @return Whether the rST field is set.
     */
    @Override
    public boolean hasRST() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional int32 RST = 10;</code>
     * @return The rST.
     */
    @Override
    public int getRST() {
      return rST_;
    }

    public static final int SYN_FIELD_NUMBER = 11;
    private int sYN_ = 0;
    /**
     * <code>optional int32 SYN = 11;</code>
     * @return Whether the sYN field is set.
     */
    @Override
    public boolean hasSYN() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional int32 SYN = 11;</code>
     * @return The sYN.
     */
    @Override
    public int getSYN() {
      return sYN_;
    }

    public static final int FIN_FIELD_NUMBER = 12;
    private int fIN_ = 0;
    /**
     * <code>optional int32 FIN = 12;</code>
     * @return Whether the fIN field is set.
     */
    @Override
    public boolean hasFIN() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional int32 FIN = 12;</code>
     * @return The fIN.
     */
    @Override
    public int getFIN() {
      return fIN_;
    }

    public static final int WINDOW_FIELD_NUMBER = 13;
    private int window_ = 0;
    /**
     * <code>optional int32 Window = 13;</code>
     * @return Whether the window field is set.
     */
    @Override
    public boolean hasWindow() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional int32 Window = 13;</code>
     * @return The window.
     */
    @Override
    public int getWindow() {
      return window_;
    }

    public static final int CHECKSUM_FIELD_NUMBER = 14;
    private int checksum_ = 0;
    /**
     * <code>optional int32 Checksum = 14;</code>
     * @return Whether the checksum field is set.
     */
    @Override
    public boolean hasChecksum() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional int32 Checksum = 14;</code>
     * @return The checksum.
     */
    @Override
    public int getChecksum() {
      return checksum_;
    }

    public static final int URGENTPOINTER_FIELD_NUMBER = 15;
    private int urgentPointer_ = 0;
    /**
     * <code>optional int32 UrgentPointer = 15;</code>
     * @return Whether the urgentPointer field is set.
     */
    @Override
    public boolean hasUrgentPointer() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional int32 UrgentPointer = 15;</code>
     * @return The urgentPointer.
     */
    @Override
    public int getUrgentPointer() {
      return urgentPointer_;
    }

    public static final int OPTIONS_FIELD_NUMBER = 16;
    private int options_ = 0;
    /**
     * <code>optional int32 Options = 16;</code>
     * @return Whether the options field is set.
     */
    @Override
    public boolean hasOptions() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional int32 Options = 16;</code>
     * @return The options.
     */
    @Override
    public int getOptions() {
      return options_;
    }

    public static final int PADDING_FIELD_NUMBER = 17;
    private int padding_ = 0;
    /**
     * <code>optional int32 Padding = 17;</code>
     * @return Whether the padding field is set.
     */
    @Override
    public boolean hasPadding() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional int32 Padding = 17;</code>
     * @return The padding.
     */
    @Override
    public int getPadding() {
      return padding_;
    }

    public static final int DATA_FIELD_NUMBER = 18;
    @SuppressWarnings("serial")
    private java.util.List<com.google.protobuf.ByteString> data_;
    /**
     * <code>repeated bytes data = 18;</code>
     * @return A list containing the data.
     */
    @Override
    public java.util.List<com.google.protobuf.ByteString>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated bytes data = 18;</code>
     * @return The count of data.
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated bytes data = 18;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    public com.google.protobuf.ByteString getData(int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, sourcePort_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, destinationPort_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, acknowledgmentNumber_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, dataOffset_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(6, reserved_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, uRG_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, aCK_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, pSH_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(10, rST_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(11, sYN_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeInt32(12, fIN_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeInt32(13, window_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeInt32(14, checksum_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeInt32(15, urgentPointer_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeInt32(16, options_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeInt32(17, padding_);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeBytes(18, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sourcePort_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, destinationPort_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, acknowledgmentNumber_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, dataOffset_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, reserved_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, uRG_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, aCK_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, pSH_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, rST_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, sYN_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, fIN_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, window_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, checksum_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, urgentPointer_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, options_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, padding_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < data_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(data_.get(i));
        }
        size += dataSize;
        size += 2 * getDataList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TcpFrame)) {
        return super.equals(obj);
      }
      TcpFrame other = (TcpFrame) obj;

      if (hasSourcePort() != other.hasSourcePort()) return false;
      if (hasSourcePort()) {
        if (getSourcePort()
            != other.getSourcePort()) return false;
      }
      if (hasDestinationPort() != other.hasDestinationPort()) return false;
      if (hasDestinationPort()) {
        if (getDestinationPort()
            != other.getDestinationPort()) return false;
      }
      if (hasSequenceNumber() != other.hasSequenceNumber()) return false;
      if (hasSequenceNumber()) {
        if (getSequenceNumber()
            != other.getSequenceNumber()) return false;
      }
      if (hasAcknowledgmentNumber() != other.hasAcknowledgmentNumber()) return false;
      if (hasAcknowledgmentNumber()) {
        if (getAcknowledgmentNumber()
            != other.getAcknowledgmentNumber()) return false;
      }
      if (hasDataOffset() != other.hasDataOffset()) return false;
      if (hasDataOffset()) {
        if (getDataOffset()
            != other.getDataOffset()) return false;
      }
      if (hasReserved() != other.hasReserved()) return false;
      if (hasReserved()) {
        if (getReserved()
            != other.getReserved()) return false;
      }
      if (hasURG() != other.hasURG()) return false;
      if (hasURG()) {
        if (getURG()
            != other.getURG()) return false;
      }
      if (hasACK() != other.hasACK()) return false;
      if (hasACK()) {
        if (getACK()
            != other.getACK()) return false;
      }
      if (hasPSH() != other.hasPSH()) return false;
      if (hasPSH()) {
        if (getPSH()
            != other.getPSH()) return false;
      }
      if (hasRST() != other.hasRST()) return false;
      if (hasRST()) {
        if (getRST()
            != other.getRST()) return false;
      }
      if (hasSYN() != other.hasSYN()) return false;
      if (hasSYN()) {
        if (getSYN()
            != other.getSYN()) return false;
      }
      if (hasFIN() != other.hasFIN()) return false;
      if (hasFIN()) {
        if (getFIN()
            != other.getFIN()) return false;
      }
      if (hasWindow() != other.hasWindow()) return false;
      if (hasWindow()) {
        if (getWindow()
            != other.getWindow()) return false;
      }
      if (hasChecksum() != other.hasChecksum()) return false;
      if (hasChecksum()) {
        if (getChecksum()
            != other.getChecksum()) return false;
      }
      if (hasUrgentPointer() != other.hasUrgentPointer()) return false;
      if (hasUrgentPointer()) {
        if (getUrgentPointer()
            != other.getUrgentPointer()) return false;
      }
      if (hasOptions() != other.hasOptions()) return false;
      if (hasOptions()) {
        if (getOptions()
            != other.getOptions()) return false;
      }
      if (hasPadding() != other.hasPadding()) return false;
      if (hasPadding()) {
        if (getPadding()
            != other.getPadding()) return false;
      }
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSourcePort()) {
        hash = (37 * hash) + SOURCEPORT_FIELD_NUMBER;
        hash = (53 * hash) + getSourcePort();
      }
      if (hasDestinationPort()) {
        hash = (37 * hash) + DESTINATIONPORT_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationPort();
      }
      if (hasSequenceNumber()) {
        hash = (37 * hash) + SEQUENCENUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceNumber();
      }
      if (hasAcknowledgmentNumber()) {
        hash = (37 * hash) + ACKNOWLEDGMENTNUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getAcknowledgmentNumber();
      }
      if (hasDataOffset()) {
        hash = (37 * hash) + DATAOFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getDataOffset();
      }
      if (hasReserved()) {
        hash = (37 * hash) + RESERVED_FIELD_NUMBER;
        hash = (53 * hash) + getReserved();
      }
      if (hasURG()) {
        hash = (37 * hash) + URG_FIELD_NUMBER;
        hash = (53 * hash) + getURG();
      }
      if (hasACK()) {
        hash = (37 * hash) + ACK_FIELD_NUMBER;
        hash = (53 * hash) + getACK();
      }
      if (hasPSH()) {
        hash = (37 * hash) + PSH_FIELD_NUMBER;
        hash = (53 * hash) + getPSH();
      }
      if (hasRST()) {
        hash = (37 * hash) + RST_FIELD_NUMBER;
        hash = (53 * hash) + getRST();
      }
      if (hasSYN()) {
        hash = (37 * hash) + SYN_FIELD_NUMBER;
        hash = (53 * hash) + getSYN();
      }
      if (hasFIN()) {
        hash = (37 * hash) + FIN_FIELD_NUMBER;
        hash = (53 * hash) + getFIN();
      }
      if (hasWindow()) {
        hash = (37 * hash) + WINDOW_FIELD_NUMBER;
        hash = (53 * hash) + getWindow();
      }
      if (hasChecksum()) {
        hash = (37 * hash) + CHECKSUM_FIELD_NUMBER;
        hash = (53 * hash) + getChecksum();
      }
      if (hasUrgentPointer()) {
        hash = (37 * hash) + URGENTPOINTER_FIELD_NUMBER;
        hash = (53 * hash) + getUrgentPointer();
      }
      if (hasOptions()) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptions();
      }
      if (hasPadding()) {
        hash = (37 * hash) + PADDING_FIELD_NUMBER;
        hash = (53 * hash) + getPadding();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TcpFrame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TcpFrame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TcpFrame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TcpFrame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TcpFrame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TcpFrame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TcpFrame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TcpFrame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static TcpFrame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static TcpFrame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TcpFrame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TcpFrame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TcpFrame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     *     0                   1                   2                   3
     *     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     *    |          Source Port          |       Destination Port        |
     *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     *    |                        Sequence Number                        |
     *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     *    |                    Acknowledgment Number                      |
     *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     *    |  Data |           |U|A|P|R|S|F|                               |
     *    | Offset| Reserved  |R|C|S|S|Y|I|            Window             |
     *    |       |           |G|K|H|T|N|N|                               |
     *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     *    |           Checksum            |         Urgent Pointer        |
     *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     *    |                    Options                    |    Padding    |
     *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     *    |                             data                              |
     *    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     *
     *                             TCP Header Format
     * </pre>
     *
     * Protobuf type {@code jet.protobuf.TcpFrame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:jet.protobuf.TcpFrame)
        TcpFrameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TcpFrameProto.internal_static_jet_protobuf_TcpFrame_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TcpFrameProto.internal_static_jet_protobuf_TcpFrame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TcpFrame.class, Builder.class);
      }

      // Construct using org.example.protocol.tcp.entity.TcpFrameProto.TcpFrame.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sourcePort_ = 0;
        destinationPort_ = 0;
        sequenceNumber_ = 0;
        acknowledgmentNumber_ = 0;
        dataOffset_ = 0;
        reserved_ = 0;
        uRG_ = 0;
        aCK_ = 0;
        pSH_ = 0;
        rST_ = 0;
        sYN_ = 0;
        fIN_ = 0;
        window_ = 0;
        checksum_ = 0;
        urgentPointer_ = 0;
        options_ = 0;
        padding_ = 0;
        data_ = java.util.Collections.emptyList();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TcpFrameProto.internal_static_jet_protobuf_TcpFrame_descriptor;
      }

      @Override
      public TcpFrame getDefaultInstanceForType() {
        return TcpFrame.getDefaultInstance();
      }

      @Override
      public TcpFrame build() {
        TcpFrame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TcpFrame buildPartial() {
        TcpFrame result = new TcpFrame(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(TcpFrame result) {
        if (((bitField0_ & 0x00020000) != 0)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.data_ = data_;
      }

      private void buildPartial0(TcpFrame result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sourcePort_ = sourcePort_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.destinationPort_ = destinationPort_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sequenceNumber_ = sequenceNumber_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.acknowledgmentNumber_ = acknowledgmentNumber_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.dataOffset_ = dataOffset_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.reserved_ = reserved_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.uRG_ = uRG_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.aCK_ = aCK_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.pSH_ = pSH_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.rST_ = rST_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.sYN_ = sYN_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.fIN_ = fIN_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.window_ = window_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.checksum_ = checksum_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.urgentPointer_ = urgentPointer_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.options_ = options_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.padding_ = padding_;
          to_bitField0_ |= 0x00010000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TcpFrame) {
          return mergeFrom((TcpFrame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TcpFrame other) {
        if (other == TcpFrame.getDefaultInstance()) return this;
        if (other.hasSourcePort()) {
          setSourcePort(other.getSourcePort());
        }
        if (other.hasDestinationPort()) {
          setDestinationPort(other.getDestinationPort());
        }
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.hasAcknowledgmentNumber()) {
          setAcknowledgmentNumber(other.getAcknowledgmentNumber());
        }
        if (other.hasDataOffset()) {
          setDataOffset(other.getDataOffset());
        }
        if (other.hasReserved()) {
          setReserved(other.getReserved());
        }
        if (other.hasURG()) {
          setURG(other.getURG());
        }
        if (other.hasACK()) {
          setACK(other.getACK());
        }
        if (other.hasPSH()) {
          setPSH(other.getPSH());
        }
        if (other.hasRST()) {
          setRST(other.getRST());
        }
        if (other.hasSYN()) {
          setSYN(other.getSYN());
        }
        if (other.hasFIN()) {
          setFIN(other.getFIN());
        }
        if (other.hasWindow()) {
          setWindow(other.getWindow());
        }
        if (other.hasChecksum()) {
          setChecksum(other.getChecksum());
        }
        if (other.hasUrgentPointer()) {
          setUrgentPointer(other.getUrgentPointer());
        }
        if (other.hasOptions()) {
          setOptions(other.getOptions());
        }
        if (other.hasPadding()) {
          setPadding(other.getPadding());
        }
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                sourcePort_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                destinationPort_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                sequenceNumber_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                acknowledgmentNumber_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                dataOffset_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                reserved_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                uRG_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                aCK_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                pSH_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                rST_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                sYN_ = input.readInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                fIN_ = input.readInt32();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                window_ = input.readInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                checksum_ = input.readInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                urgentPointer_ = input.readInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                options_ = input.readInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                padding_ = input.readInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 146: {
                com.google.protobuf.ByteString v = input.readBytes();
                ensureDataIsMutable();
                data_.add(v);
                break;
              } // case 146
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int sourcePort_ ;
      /**
       * <pre>
       *指定字段类型
       * </pre>
       *
       * <code>optional int32 SourcePort = 1;</code>
       * @return Whether the sourcePort field is set.
       */
      @Override
      public boolean hasSourcePort() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *指定字段类型
       * </pre>
       *
       * <code>optional int32 SourcePort = 1;</code>
       * @return The sourcePort.
       */
      @Override
      public int getSourcePort() {
        return sourcePort_;
      }
      /**
       * <pre>
       *指定字段类型
       * </pre>
       *
       * <code>optional int32 SourcePort = 1;</code>
       * @param value The sourcePort to set.
       * @return This builder for chaining.
       */
      public Builder setSourcePort(int value) {

        sourcePort_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *指定字段类型
       * </pre>
       *
       * <code>optional int32 SourcePort = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourcePort() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sourcePort_ = 0;
        onChanged();
        return this;
      }

      private int destinationPort_ ;
      /**
       * <code>optional int32 DestinationPort = 2;</code>
       * @return Whether the destinationPort field is set.
       */
      @Override
      public boolean hasDestinationPort() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 DestinationPort = 2;</code>
       * @return The destinationPort.
       */
      @Override
      public int getDestinationPort() {
        return destinationPort_;
      }
      /**
       * <code>optional int32 DestinationPort = 2;</code>
       * @param value The destinationPort to set.
       * @return This builder for chaining.
       */
      public Builder setDestinationPort(int value) {

        destinationPort_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 DestinationPort = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestinationPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        destinationPort_ = 0;
        onChanged();
        return this;
      }

      private int sequenceNumber_ ;
      /**
       * <code>optional int32 SequenceNumber = 3;</code>
       * @return Whether the sequenceNumber field is set.
       */
      @Override
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 SequenceNumber = 3;</code>
       * @return The sequenceNumber.
       */
      @Override
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <code>optional int32 SequenceNumber = 3;</code>
       * @param value The sequenceNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNumber(int value) {

        sequenceNumber_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SequenceNumber = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      private int acknowledgmentNumber_ ;
      /**
       * <code>optional int32 AcknowledgmentNumber = 4;</code>
       * @return Whether the acknowledgmentNumber field is set.
       */
      @Override
      public boolean hasAcknowledgmentNumber() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 AcknowledgmentNumber = 4;</code>
       * @return The acknowledgmentNumber.
       */
      @Override
      public int getAcknowledgmentNumber() {
        return acknowledgmentNumber_;
      }
      /**
       * <code>optional int32 AcknowledgmentNumber = 4;</code>
       * @param value The acknowledgmentNumber to set.
       * @return This builder for chaining.
       */
      public Builder setAcknowledgmentNumber(int value) {

        acknowledgmentNumber_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 AcknowledgmentNumber = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAcknowledgmentNumber() {
        bitField0_ = (bitField0_ & ~0x00000008);
        acknowledgmentNumber_ = 0;
        onChanged();
        return this;
      }

      private int dataOffset_ ;
      /**
       * <code>optional int32 dataOffset = 5;</code>
       * @return Whether the dataOffset field is set.
       */
      @Override
      public boolean hasDataOffset() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 dataOffset = 5;</code>
       * @return The dataOffset.
       */
      @Override
      public int getDataOffset() {
        return dataOffset_;
      }
      /**
       * <code>optional int32 dataOffset = 5;</code>
       * @param value The dataOffset to set.
       * @return This builder for chaining.
       */
      public Builder setDataOffset(int value) {

        dataOffset_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dataOffset = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataOffset() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dataOffset_ = 0;
        onChanged();
        return this;
      }

      private int reserved_ ;
      /**
       * <code>optional int32 Reserved = 6;</code>
       * @return Whether the reserved field is set.
       */
      @Override
      public boolean hasReserved() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int32 Reserved = 6;</code>
       * @return The reserved.
       */
      @Override
      public int getReserved() {
        return reserved_;
      }
      /**
       * <code>optional int32 Reserved = 6;</code>
       * @param value The reserved to set.
       * @return This builder for chaining.
       */
      public Builder setReserved(int value) {

        reserved_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Reserved = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearReserved() {
        bitField0_ = (bitField0_ & ~0x00000020);
        reserved_ = 0;
        onChanged();
        return this;
      }

      private int uRG_ ;
      /**
       * <code>optional int32 URG = 7;</code>
       * @return Whether the uRG field is set.
       */
      @Override
      public boolean hasURG() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional int32 URG = 7;</code>
       * @return The uRG.
       */
      @Override
      public int getURG() {
        return uRG_;
      }
      /**
       * <code>optional int32 URG = 7;</code>
       * @param value The uRG to set.
       * @return This builder for chaining.
       */
      public Builder setURG(int value) {

        uRG_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 URG = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearURG() {
        bitField0_ = (bitField0_ & ~0x00000040);
        uRG_ = 0;
        onChanged();
        return this;
      }

      private int aCK_ ;
      /**
       * <code>optional int32 ACK = 8;</code>
       * @return Whether the aCK field is set.
       */
      @Override
      public boolean hasACK() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional int32 ACK = 8;</code>
       * @return The aCK.
       */
      @Override
      public int getACK() {
        return aCK_;
      }
      /**
       * <code>optional int32 ACK = 8;</code>
       * @param value The aCK to set.
       * @return This builder for chaining.
       */
      public Builder setACK(int value) {

        aCK_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ACK = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearACK() {
        bitField0_ = (bitField0_ & ~0x00000080);
        aCK_ = 0;
        onChanged();
        return this;
      }

      private int pSH_ ;
      /**
       * <code>optional int32 PSH = 9;</code>
       * @return Whether the pSH field is set.
       */
      @Override
      public boolean hasPSH() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional int32 PSH = 9;</code>
       * @return The pSH.
       */
      @Override
      public int getPSH() {
        return pSH_;
      }
      /**
       * <code>optional int32 PSH = 9;</code>
       * @param value The pSH to set.
       * @return This builder for chaining.
       */
      public Builder setPSH(int value) {

        pSH_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 PSH = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearPSH() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pSH_ = 0;
        onChanged();
        return this;
      }

      private int rST_ ;
      /**
       * <code>optional int32 RST = 10;</code>
       * @return Whether the rST field is set.
       */
      @Override
      public boolean hasRST() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional int32 RST = 10;</code>
       * @return The rST.
       */
      @Override
      public int getRST() {
        return rST_;
      }
      /**
       * <code>optional int32 RST = 10;</code>
       * @param value The rST to set.
       * @return This builder for chaining.
       */
      public Builder setRST(int value) {

        rST_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 RST = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearRST() {
        bitField0_ = (bitField0_ & ~0x00000200);
        rST_ = 0;
        onChanged();
        return this;
      }

      private int sYN_ ;
      /**
       * <code>optional int32 SYN = 11;</code>
       * @return Whether the sYN field is set.
       */
      @Override
      public boolean hasSYN() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional int32 SYN = 11;</code>
       * @return The sYN.
       */
      @Override
      public int getSYN() {
        return sYN_;
      }
      /**
       * <code>optional int32 SYN = 11;</code>
       * @param value The sYN to set.
       * @return This builder for chaining.
       */
      public Builder setSYN(int value) {

        sYN_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SYN = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSYN() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sYN_ = 0;
        onChanged();
        return this;
      }

      private int fIN_ ;
      /**
       * <code>optional int32 FIN = 12;</code>
       * @return Whether the fIN field is set.
       */
      @Override
      public boolean hasFIN() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional int32 FIN = 12;</code>
       * @return The fIN.
       */
      @Override
      public int getFIN() {
        return fIN_;
      }
      /**
       * <code>optional int32 FIN = 12;</code>
       * @param value The fIN to set.
       * @return This builder for chaining.
       */
      public Builder setFIN(int value) {

        fIN_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 FIN = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearFIN() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fIN_ = 0;
        onChanged();
        return this;
      }

      private int window_ ;
      /**
       * <code>optional int32 Window = 13;</code>
       * @return Whether the window field is set.
       */
      @Override
      public boolean hasWindow() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional int32 Window = 13;</code>
       * @return The window.
       */
      @Override
      public int getWindow() {
        return window_;
      }
      /**
       * <code>optional int32 Window = 13;</code>
       * @param value The window to set.
       * @return This builder for chaining.
       */
      public Builder setWindow(int value) {

        window_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Window = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearWindow() {
        bitField0_ = (bitField0_ & ~0x00001000);
        window_ = 0;
        onChanged();
        return this;
      }

      private int checksum_ ;
      /**
       * <code>optional int32 Checksum = 14;</code>
       * @return Whether the checksum field is set.
       */
      @Override
      public boolean hasChecksum() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional int32 Checksum = 14;</code>
       * @return The checksum.
       */
      @Override
      public int getChecksum() {
        return checksum_;
      }
      /**
       * <code>optional int32 Checksum = 14;</code>
       * @param value The checksum to set.
       * @return This builder for chaining.
       */
      public Builder setChecksum(int value) {

        checksum_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Checksum = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearChecksum() {
        bitField0_ = (bitField0_ & ~0x00002000);
        checksum_ = 0;
        onChanged();
        return this;
      }

      private int urgentPointer_ ;
      /**
       * <code>optional int32 UrgentPointer = 15;</code>
       * @return Whether the urgentPointer field is set.
       */
      @Override
      public boolean hasUrgentPointer() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional int32 UrgentPointer = 15;</code>
       * @return The urgentPointer.
       */
      @Override
      public int getUrgentPointer() {
        return urgentPointer_;
      }
      /**
       * <code>optional int32 UrgentPointer = 15;</code>
       * @param value The urgentPointer to set.
       * @return This builder for chaining.
       */
      public Builder setUrgentPointer(int value) {

        urgentPointer_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 UrgentPointer = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrgentPointer() {
        bitField0_ = (bitField0_ & ~0x00004000);
        urgentPointer_ = 0;
        onChanged();
        return this;
      }

      private int options_ ;
      /**
       * <code>optional int32 Options = 16;</code>
       * @return Whether the options field is set.
       */
      @Override
      public boolean hasOptions() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional int32 Options = 16;</code>
       * @return The options.
       */
      @Override
      public int getOptions() {
        return options_;
      }
      /**
       * <code>optional int32 Options = 16;</code>
       * @param value The options to set.
       * @return This builder for chaining.
       */
      public Builder setOptions(int value) {

        options_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Options = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptions() {
        bitField0_ = (bitField0_ & ~0x00008000);
        options_ = 0;
        onChanged();
        return this;
      }

      private int padding_ ;
      /**
       * <code>optional int32 Padding = 17;</code>
       * @return Whether the padding field is set.
       */
      @Override
      public boolean hasPadding() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional int32 Padding = 17;</code>
       * @return The padding.
       */
      @Override
      public int getPadding() {
        return padding_;
      }
      /**
       * <code>optional int32 Padding = 17;</code>
       * @param value The padding to set.
       * @return This builder for chaining.
       */
      public Builder setPadding(int value) {

        padding_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Padding = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearPadding() {
        bitField0_ = (bitField0_ & ~0x00010000);
        padding_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> data_ = java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00020000) != 0)) {
          data_ = new java.util.ArrayList<com.google.protobuf.ByteString>(data_);
          bitField0_ |= 0x00020000;
        }
      }
      /**
       * <code>repeated bytes data = 18;</code>
       * @return A list containing the data.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getDataList() {
        return ((bitField0_ & 0x00020000) != 0) ?
                 java.util.Collections.unmodifiableList(data_) : data_;
      }
      /**
       * <code>repeated bytes data = 18;</code>
       * @return The count of data.
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated bytes data = 18;</code>
       * @param index The index of the element to return.
       * @return The data at the given index.
       */
      public com.google.protobuf.ByteString getData(int index) {
        return data_.get(index);
      }
      /**
       * <code>repeated bytes data = 18;</code>
       * @param index The index to set the value at.
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes data = 18;</code>
       * @param value The data to add.
       * @return This builder for chaining.
       */
      public Builder addData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes data = 18;</code>
       * @param values The data to add.
       * @return This builder for chaining.
       */
      public Builder addAllData(
          Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes data = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:jet.protobuf.TcpFrame)
    }

    // @@protoc_insertion_point(class_scope:jet.protobuf.TcpFrame)
    private static final TcpFrame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TcpFrame();
    }

    public static TcpFrame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TcpFrame>
        PARSER = new com.google.protobuf.AbstractParser<TcpFrame>() {
      @Override
      public TcpFrame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TcpFrame> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TcpFrame> getParserForType() {
      return PARSER;
    }

    @Override
    public TcpFrame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_jet_protobuf_TcpFrame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_jet_protobuf_TcpFrame_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\016TcpFrame.proto\022\014jet.protobuf\"\374\004\n\010TcpFr" +
      "ame\022\027\n\nSourcePort\030\001 \001(\005H\000\210\001\001\022\034\n\017Destinat" +
      "ionPort\030\002 \001(\005H\001\210\001\001\022\033\n\016SequenceNumber\030\003 \001" +
      "(\005H\002\210\001\001\022!\n\024AcknowledgmentNumber\030\004 \001(\005H\003\210" +
      "\001\001\022\027\n\ndataOffset\030\005 \001(\005H\004\210\001\001\022\025\n\010Reserved\030" +
      "\006 \001(\005H\005\210\001\001\022\020\n\003URG\030\007 \001(\005H\006\210\001\001\022\020\n\003ACK\030\010 \001(" +
      "\005H\007\210\001\001\022\020\n\003PSH\030\t \001(\005H\010\210\001\001\022\020\n\003RST\030\n \001(\005H\t\210" +
      "\001\001\022\020\n\003SYN\030\013 \001(\005H\n\210\001\001\022\020\n\003FIN\030\014 \001(\005H\013\210\001\001\022\023" +
      "\n\006Window\030\r \001(\005H\014\210\001\001\022\025\n\010Checksum\030\016 \001(\005H\r\210" +
      "\001\001\022\032\n\rUrgentPointer\030\017 \001(\005H\016\210\001\001\022\024\n\007Option" +
      "s\030\020 \001(\005H\017\210\001\001\022\024\n\007Padding\030\021 \001(\005H\020\210\001\001\022\014\n\004da" +
      "ta\030\022 \003(\014B\r\n\013_SourcePortB\022\n\020_DestinationP" +
      "ortB\021\n\017_SequenceNumberB\027\n\025_Acknowledgmen" +
      "tNumberB\r\n\013_dataOffsetB\013\n\t_ReservedB\006\n\004_" +
      "URGB\006\n\004_ACKB\006\n\004_PSHB\006\n\004_RSTB\006\n\004_SYNB\006\n\004_" +
      "FINB\t\n\007_WindowB\013\n\t_ChecksumB\020\n\016_UrgentPo" +
      "interB\n\n\010_OptionsB\n\n\010_PaddingB0\n\037org.exa" +
      "mple.protocol.tcp.entityB\rTcpFrameProtob" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_jet_protobuf_TcpFrame_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_jet_protobuf_TcpFrame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_jet_protobuf_TcpFrame_descriptor,
        new String[] { "SourcePort", "DestinationPort", "SequenceNumber", "AcknowledgmentNumber", "DataOffset", "Reserved", "URG", "ACK", "PSH", "RST", "SYN", "FIN", "Window", "Checksum", "UrgentPointer", "Options", "Padding", "Data", "SourcePort", "DestinationPort", "SequenceNumber", "AcknowledgmentNumber", "DataOffset", "Reserved", "URG", "ACK", "PSH", "RST", "SYN", "FIN", "Window", "Checksum", "UrgentPointer", "Options", "Padding", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
